; start
STOSW
MOV BX, AX
db 0x8D, 0xB7, 0x49, 0x00
jmp start

db 0xCC
db 0xCC
db 0xCC


XOR DI, DI
MOV CL, 0x19
REP MOVSW
PUSH ES
POP DS
PUSH CS
PUSH CS
POP ES
POP SS
XCHG BX, SP
MOV AX, 0x1FFF
MOV DX, 0xCCCC
INT 0x87
XCHG BX, SP
MOV BL, 0xA7
LEA SP, [BX + 0x83B5]
LEA AX, [BX + 0x6FF]
MOV BX, 0xB0
MOV [BX], AX
MOV WORD [BX + 0x2], 0xFFB
MOV AX, 0x51A5
MOV DX, 0xFC
MOV CL, 0x8
MOV SI, 0x1A
LES DI, [BX]
DEC DI
MOVSW
MOVSW
MOVSW
SUB WORD DI, 0x4
PUSH AX
CALL FAR [BX]
PUSH AX
MOVSW
REP MOVSW
SUB [BX + 0x1], AH
SUB SP, DX
MOV DI, [BX]
DEC DI
MOV CL, 0xA
XOR SI, SI
MOVSW
MOVSW
PUSH CX
DEC DI
DEC DI
CALL FAR [BX]
PUSH CX
SUB SP, DX
CALL FAR [BX]
PUSH CX
REP MOVSW
MOV DX, 0x4102
MOV CL, 0xA
ADD BYTE [BX], 0x2
SUB WORD SP, 0x2
MOV SI, 0x4
REP MOVSW
db 0xCC
db 0xCC
db 0xCC


XOR DI, DI
MOV CL, 0x19
REP MOVSW
PUSH ES
POP DS
PUSH CS
PUSH CS
POP ES
POP SS
XCHG BX, SP
MOV AX, 0x1FFF
MOV DX, 0xCCCC
INT 0x87
XCHG BX, SP
MOV BL, 0xA7
LEA SP, [BX + 0x83B5]
LEA AX, [BX + 0x6FF]
MOV BX, 0xB0
MOV [BX], AX
MOV WORD [BX + 0x2], 0xFFB
MOV AX, 0x51A5
MOV DX, 0xFC
MOV CL, 0x8
MOV SI, 0x1A
LES DI, [BX]
DEC DI
MOVSW
MOVSW
MOVSW
SUB WORD DI, 0x4
PUSH AX
CALL FAR [BX]
PUSH AX
MOVSW
REP MOVSW
SUB [BX + 0x1], AH
SUB SP, DX
MOV DI, [BX]
DEC DI
MOV CL, 0xA
XOR SI, SI
MOVSW
MOVSW
PUSH CX
DEC DI
DEC DI
CALL FAR [BX]
PUSH CX
SUB SP, DX
CALL FAR [BX]
PUSH CX
REP MOVSW
MOV DX, 0x4102
MOV CL, 0xA
ADD BYTE [BX], 0x2
SUB WORD SP, 0x2
MOV SI, 0x4
REP MOVSW
db 0xCC
db 0xCC
db 0xCC

start:
XOR DI, DI
MOV CL, 0x19
REP MOVSW
PUSH ES
POP DS
PUSH CS
PUSH CS
POP ES
POP SS
XCHG BX, SP
MOV AX, 0x1FFF
MOV DX, 0xCCCC
INT 0x87
XCHG BX, SP
MOV BL, 0xA7
LEA SP, [BX + 0x83B5]
LEA AX, [BX + 0x6FF]
MOV BX, 0xB0
MOV [BX], AX
MOV WORD [BX + 0x2], 0xFFB
MOV AX, 0x51A5
MOV DX, 0xFC
MOV CL, 0x8
MOV SI, 0x1A
LES DI, [BX]
DEC DI
MOVSW
MOVSW
MOVSW
SUB WORD DI, 0x4
PUSH AX
CALL FAR [BX]
PUSH AX
MOVSW
REP MOVSW
SUB [BX + 0x1], AH
SUB SP, DX
MOV DI, [BX]
DEC DI
MOV CL, 0xA
XOR SI, SI
MOVSW
MOVSW
PUSH CX
DEC DI
DEC DI
CALL FAR [BX]
PUSH CX
SUB SP, DX
CALL FAR [BX]
PUSH CX
REP MOVSW
MOV DX, 0x4102
MOV CL, 0xA
ADD BYTE [BX], 0x2
SUB WORD SP, 0x2
MOV SI, 0x4
REP MOVSW
db 0xCC
db 0xCC
db 0xCC


XOR DI, DI
MOV CL, 0x19
REP MOVSW
PUSH ES
POP DS
PUSH CS
PUSH CS
POP ES
POP SS
XCHG BX, SP
MOV AX, 0x1FFF
MOV DX, 0xCCCC
INT 0x87
XCHG BX, SP
MOV BL, 0xA7
LEA SP, [BX + 0x83B5]
LEA AX, [BX + 0x6FF]
MOV BX, 0xB0
MOV [BX], AX
MOV WORD [BX + 0x2], 0xFFB
MOV AX, 0x51A5
MOV DX, 0xFC
MOV CL, 0x8
MOV SI, 0x1A
LES DI, [BX]
DEC DI
MOVSW
MOVSW
MOVSW
SUB WORD DI, 0x4
PUSH AX
CALL FAR [BX]
PUSH AX
MOVSW
REP MOVSW
SUB [BX + 0x1], AH
SUB SP, DX
MOV DI, [BX]
DEC DI
MOV CL, 0xA
XOR SI, SI
MOVSW
MOVSW
PUSH CX
DEC DI
DEC DI
CALL FAR [BX]
PUSH CX
SUB SP, DX
CALL FAR [BX]
PUSH CX
REP MOVSW
MOV DX, 0x4102
MOV CL, 0xA
ADD BYTE [BX], 0x2
SUB WORD SP, 0x2
MOV SI, 0x4
REP MOVSW
db 0xCC
db 0xCC
db 0xCC


XOR DI, DI
MOV CL, 0x19
REP MOVSW
PUSH ES
POP DS
PUSH CS
PUSH CS
POP ES
POP SS
XCHG BX, SP
MOV AX, 0x1FFF
MOV DX, 0xCCCC
INT 0x87
XCHG BX, SP
MOV BL, 0xA7
LEA SP, [BX + 0x83B5]
LEA AX, [BX + 0x6FF]
MOV BX, 0xB0
MOV [BX], AX
MOV WORD [BX + 0x2], 0xFFB
MOV AX, 0x51A5
MOV DX, 0xFC
MOV CL, 0x8
MOV SI, 0x1A
LES DI, [BX]
DEC DI
MOVSW
MOVSW
MOVSW
SUB WORD DI, 0x4
PUSH AX
CALL FAR [BX]
PUSH AX
MOVSW
REP MOVSW
SUB [BX + 0x1], AH
SUB SP, DX
MOV DI, [BX]
DEC DI
MOV CL, 0xA
XOR SI, SI
MOVSW
MOVSW
PUSH CX
DEC DI
DEC DI
CALL FAR [BX]
PUSH CX
SUB SP, DX
CALL FAR [BX]
PUSH CX
REP MOVSW
MOV DX, 0x4102
MOV CL, 0xA
ADD BYTE [BX], 0x2
SUB WORD SP, 0x2
MOV SI, 0x4
REP MOVSW
